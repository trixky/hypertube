syntax = "proto3";

option go_package = "./proto";

package auth;

import "google/api/annotations.proto";
import "media.proto";

message GetMeRequest {
    string token = 1;
}

message GetUserRequest {
    int64 id = 1;
}

message UpdateMeRequest {
    string token = 1;
    string username = 2;
    string firstname = 3;
    string lastname = 4;
    string email = 5;
    string current_password = 6;
    string new_password = 7;
}

message UserInfoResponse {
    string user_info = 1; // base 64
}

message UploadPictureRequest {
    int64 user_id = 1;
    bytes picture = 2;
}

message UploadPictureResponse {
}

message DeletePictureRequest {
    int64 user_id = 1;
}

message DeletePictureResponse {
}

message GetUserMoviesRequest {
    int64 user_id = 1;
	optional uint32 page = 2;
}

service UserService {
    rpc GetMe(GetMeRequest) returns (UserInfoResponse) {
        option (google.api.http) = {
            get: "/v1/me"
        };
    };

    rpc UpdateMe(UpdateMeRequest) returns (UserInfoResponse) {
        option (google.api.http) = {
            patch: "/v1/me"
        };
    };

    rpc UploadPicture(UploadPictureRequest) returns (UploadPictureResponse) {
        option (google.api.http) = {
            patch: "/v1/me/picture"
        };
    };

    rpc DeletePicture(DeletePictureRequest) returns (DeletePictureResponse) {
        option (google.api.http) = {
            delete: "/v1/me/picture"
        };
    };

    rpc GetUser(GetUserRequest) returns (UserInfoResponse) {
        option (google.api.http) = {
            get: "/v1/user"
        };
    };

    rpc GetUserMovies(GetUserMoviesRequest) returns (media.MediaList) {
        option (google.api.http) = {
            get: "/v1/user/{user_id}/movies"
        };
    };
}
